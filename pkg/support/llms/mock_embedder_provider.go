// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/support/llms/embedder_provider.go

// Package llms is a generated GoMock package.
package llms

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEmbedderProvider is a mock of EmbedderProvider interface.
type MockEmbedderProvider struct {
	ctrl     *gomock.Controller
	recorder *MockEmbedderProviderMockRecorder
}

// MockEmbedderProviderMockRecorder is the mock recorder for MockEmbedderProvider.
type MockEmbedderProviderMockRecorder struct {
	mock *MockEmbedderProvider
}

// NewMockEmbedderProvider creates a new mock instance.
func NewMockEmbedderProvider(ctrl *gomock.Controller) *MockEmbedderProvider {
	mock := &MockEmbedderProvider{ctrl: ctrl}
	mock.recorder = &MockEmbedderProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmbedderProvider) EXPECT() *MockEmbedderProviderMockRecorder {
	return m.recorder
}

// GetEmbeddings mocks base method.
func (m *MockEmbedderProvider) GetEmbeddings(ctx context.Context, texts []string) (*EmbeddingResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEmbeddings", ctx, texts)
	ret0, _ := ret[0].(*EmbeddingResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEmbeddings indicates an expected call of GetEmbeddings.
func (mr *MockEmbedderProviderMockRecorder) GetEmbeddings(ctx, texts interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEmbeddings", reflect.TypeOf((*MockEmbedderProvider)(nil).GetEmbeddings), ctx, texts)
}
