// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/support/document/chunking.go

// Package document is a generated GoMock package.
package document

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockChunker is a mock of Chunker interface.
type MockChunker struct {
	ctrl     *gomock.Controller
	recorder *MockChunkerMockRecorder
}

// MockChunkerMockRecorder is the mock recorder for MockChunker.
type MockChunkerMockRecorder struct {
	mock *MockChunker
}

// NewMockChunker creates a new mock instance.
func NewMockChunker(ctrl *gomock.Controller) *MockChunker {
	mock := &MockChunker{ctrl: ctrl}
	mock.recorder = &MockChunkerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChunker) EXPECT() *MockChunkerMockRecorder {
	return m.recorder
}

// Chunk mocks base method.
func (m *MockChunker) Chunk(doc *Document) ([]*Document, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Chunk", doc)
	ret0, _ := ret[0].([]*Document)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Chunk indicates an expected call of Chunk.
func (mr *MockChunkerMockRecorder) Chunk(doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Chunk", reflect.TypeOf((*MockChunker)(nil).Chunk), doc)
}
